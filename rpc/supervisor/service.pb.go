// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package supervisor

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TrackRequest_ProductType int32

const (
	TrackRequest_HAT  TrackRequest_ProductType = 0
	TrackRequest_VEST TrackRequest_ProductType = 1
)

var TrackRequest_ProductType_name = map[int32]string{
	0: "HAT",
	1: "VEST",
}
var TrackRequest_ProductType_value = map[string]int32{
	"HAT":  0,
	"VEST": 1,
}

func (x TrackRequest_ProductType) String() string {
	return proto.EnumName(TrackRequest_ProductType_name, int32(x))
}
func (TrackRequest_ProductType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_service_5dcd798653bd0626, []int{0, 0}
}

// TrackRequest store general data of a product from haberdasher
type TrackRequest struct {
	Total                int32                    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Type                 TrackRequest_ProductType `protobuf:"varint,2,opt,name=type,proto3,enum=twirp.example.supervisor.TrackRequest_ProductType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *TrackRequest) Reset()         { *m = TrackRequest{} }
func (m *TrackRequest) String() string { return proto.CompactTextString(m) }
func (*TrackRequest) ProtoMessage()    {}
func (*TrackRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_5dcd798653bd0626, []int{0}
}
func (m *TrackRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrackRequest.Unmarshal(m, b)
}
func (m *TrackRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrackRequest.Marshal(b, m, deterministic)
}
func (dst *TrackRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrackRequest.Merge(dst, src)
}
func (m *TrackRequest) XXX_Size() int {
	return xxx_messageInfo_TrackRequest.Size(m)
}
func (m *TrackRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TrackRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TrackRequest proto.InternalMessageInfo

func (m *TrackRequest) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *TrackRequest) GetType() TrackRequest_ProductType {
	if m != nil {
		return m.Type
	}
	return TrackRequest_HAT
}

func init() {
	proto.RegisterType((*TrackRequest)(nil), "twirp.example.supervisor.TrackRequest")
	proto.RegisterEnum("twirp.example.supervisor.TrackRequest_ProductType", TrackRequest_ProductType_name, TrackRequest_ProductType_value)
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_service_5dcd798653bd0626) }

var fileDescriptor_service_5dcd798653bd0626 = []byte{
	// 191 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x92, 0x28, 0x29, 0xcf, 0x2c, 0x2a,
	0xd0, 0x4b, 0xad, 0x48, 0xcc, 0x2d, 0xc8, 0x49, 0xd5, 0x2b, 0x2e, 0x2d, 0x00, 0x49, 0x17, 0xe7,
	0x17, 0x29, 0xf5, 0x31, 0x72, 0xf1, 0x84, 0x14, 0x25, 0x26, 0x67, 0x07, 0xa5, 0x16, 0x96, 0xa6,
	0x16, 0x97, 0x08, 0x89, 0x70, 0xb1, 0x96, 0xe4, 0x97, 0x24, 0xe6, 0x48, 0x30, 0x2a, 0x30, 0x6a,
	0xb0, 0x06, 0x41, 0x38, 0x42, 0x6e, 0x5c, 0x2c, 0x25, 0x95, 0x05, 0xa9, 0x12, 0x4c, 0x40, 0x41,
	0x3e, 0x23, 0x23, 0x3d, 0x5c, 0xe6, 0xe9, 0x21, 0x9b, 0xa5, 0x17, 0x50, 0x94, 0x9f, 0x52, 0x9a,
	0x5c, 0x12, 0x02, 0xd4, 0x19, 0x04, 0xd6, 0xaf, 0xa4, 0xc0, 0xc5, 0x8d, 0x24, 0x28, 0xc4, 0xce,
	0xc5, 0xec, 0xe1, 0x18, 0x22, 0xc0, 0x20, 0xc4, 0xc1, 0xc5, 0x12, 0xe6, 0x1a, 0x1c, 0x22, 0xc0,
	0x68, 0x94, 0xca, 0xc5, 0x15, 0x0c, 0x37, 0x4e, 0x28, 0x9c, 0x8b, 0x15, 0x6c, 0xa2, 0x90, 0x1a,
	0x71, 0x56, 0x4a, 0x11, 0xa9, 0xce, 0x89, 0x27, 0x8a, 0x0b, 0x21, 0x95, 0xc4, 0x06, 0x0e, 0x26,
	0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2a, 0x91, 0x5d, 0xe4, 0x37, 0x01, 0x00, 0x00,
}
